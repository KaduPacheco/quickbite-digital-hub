
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Use environment variables with fallbacks
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://qstqklpjdwptskscqxle.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFzdHFrbHBqZHdwdHNrc2NxeGxlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI0NDg5ODQsImV4cCI6MjA2ODAyNDk4NH0.mfmXZ3qHkjOcGhOfJTlXL1XA0PrPVgQ-rKyVBnsHttA";

// Validate required environment variables
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error('Supabase configuration error: Missing required environment variables');
  console.error('SUPABASE_URL:', SUPABASE_URL ? 'Set' : 'Missing');
  console.error('SUPABASE_PUBLISHABLE_KEY:', SUPABASE_PUBLISHABLE_KEY ? 'Set' : 'Missing');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

let supabase: ReturnType<typeof createClient<Database>>;

try {
  supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
    }
  });
  
  console.log('Supabase client initialized successfully');
} catch (error) {
  console.error('Failed to create Supabase client:', error);
  throw new Error('Failed to initialize Supabase client');
}

export { supabase };
